{"version":3,"sources":["Components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","setInterval","this","tick","old","clockName","props","console","log","clearInterval","setState","React","Component","App","isClockVisible","visible","hidden","randomName","Math","round","random","className","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,QAAwBC,aAAY,cAAW,GALjD,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAa,kBAAM,EAAKE,SAAS,OARpD,gCAWE,SAAmBC,GACbA,EAAIC,YAAcH,KAAKI,MAAMD,WAE/BE,QAAQC,IAAR,qCAA0CJ,EAAIC,UAA9C,eAA8DH,KAAKI,MAAMD,cAd/E,kCAkBE,WACEI,cAAcP,KAAKF,WAnBvB,kBAsBE,WACEE,KAAKQ,SAAS,CACZb,MAAM,IAAIC,MAAOC,uBAGnBQ,QAAQC,IAAIN,KAAKN,MAAMC,QA3B3B,oBA8BE,WACE,OACE,qDACYK,KAAKI,MAAMD,UADvB,0BAGaH,KAAKN,MAAMC,aAnC9B,GAA2Bc,IAAMC,WCA3BC,E,4MACJjB,MAAe,CACbkB,gBAAgB,EAChBT,UAAW,G,EAGbU,QAAU,WACR,EAAKL,SAAS,CAAEI,gBAAgB,K,EAGlCE,OAAS,WACP,EAAKN,SAAS,CAAEI,gBAAgB,K,EAGlCG,WAAa,WACX,EAAKP,SAAS,CAAEL,UAAWa,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAG7C,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACCnB,KAAKN,MAAMkB,gBACV,4BACE,cAAC,EAAD,CAAOT,UAAWH,KAAKN,MAAMS,cAGjC,wBACEiB,KAAK,SACLC,QAASrB,KAAKa,QACdS,SAAUtB,KAAKN,MAAMkB,eAHvB,kBAOA,wBACEQ,KAAK,SACLC,QAASrB,KAAKc,OACdQ,UAAWtB,KAAKN,MAAMkB,eAHxB,kBAOA,wBACEQ,KAAK,SACLC,QAASrB,KAAKe,WAFhB,gC,GAzCUN,IAAMC,WAoDTC,IC3DfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d61757fd.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: number,\n};\n\ntype State = {\n  time: string\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => { }, 0);\n\n  componentDidMount() {\n    this.timerId = setInterval((() => this.tick()), 1000);\n  }\n\n  componentDidUpdate(old: Props) {\n    if (old.clockName !== this.props.clockName) {\n    // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${old.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  tick() {\n    this.setState({\n      time: new Date().toLocaleTimeString(),\n    });\n    // eslint-disable-next-line\n    console.log(this.state.time)\n  }\n\n  render() {\n    return (\n      <>\n        {`name: ${this.props.clockName} `}\n        |\n        {` time: ${this.state.time}`}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './Components/Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  visible = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hidden = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  randomName = () => {\n    this.setState({ clockName: Math.round(Math.random() * 100) });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.isClockVisible && (\n          <p>\n            <Clock clockName={this.state.clockName} />\n          </p>\n        )}\n        <button\n          type=\"button\"\n          onClick={this.visible}\n          disabled={this.state.isClockVisible}\n        >\n          Show\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.hidden}\n          disabled={!this.state.isClockVisible}\n        >\n          Hide\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.randomName}\n        >\n          Random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}